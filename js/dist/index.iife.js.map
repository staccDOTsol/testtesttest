{"version":3,"file":"index.iife.js","sources":["../node_modules/bn.js/lib/bn.js","../node_modules/superstruct/dist/index.mjs","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/@solana/web3.js/node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/utils.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/constants.ts","../src/utils/math.ts","../src/utils/program-address.ts","../node_modules/buffer-layout/lib/Layout.js","../node_modules/@coral-xyz/borsh/dist/index.js","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar errors = new Map([[-32000, \"Event not provided\"], [-32600, \"Invalid Request\"], [-32601, \"Method not found\"], [-32602, \"Invalid params\"], [-32603, \"Internal error\"], [-32604, \"Params not found\"], [-32605, \"Method forbidden\"], [-32606, \"Event forbidden\"], [-32700, \"Parse error\"]]);\nvar DefaultDataPack = /*#__PURE__*/function () {\n  function DefaultDataPack() {\n    (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n  }\n  (0, _createClass2[\"default\"])(DefaultDataPack, [{\n    key: \"encode\",\n    value: function encode(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(value) {\n      return JSON.parse(value);\n    }\n  }]);\n  return DefaultDataPack;\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nexports.DefaultDataPack = DefaultDataPack;\nfunction createError(code, details) {\n  var error = {\n    code: code,\n    message: errors.get(code) || \"Internal Server Error\"\n  };\n  if (details) error[\"data\"] = details;\n  return error;\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nvar _utils = require(\"./utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();else _this.dataPack = dataPack;\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || undefined,\n          id: rpc_id\n        };\n        _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params\n        };\n        _this3.socket.send(_this3.dataPack.encode(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = _this4.dataPack.decode(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message === null || message === void 0 ? void 0 : message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _class;\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_class = PublicKey;\nPublicKey.default = new _class('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.splice(0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.splice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = byteArray.shift();\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: byteArray.shift(),\n      numReadonlySignedAccounts: byteArray.shift(),\n      numReadonlyUnsignedAccounts: byteArray.shift()\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args], true /* isArrayProp */);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _class2;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_class2 = Lockup;\nLockup.default = new _class2(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const isSigner = byteArray.splice(0, 1)[0] === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","import { Buffer } from 'buffer';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  METADATA_PROGRAM_ID,\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport async function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed?: number,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed ? new BN(seed).toArrayLike(Buffer, 'le', 4) : Buffer.alloc(0),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toArrayLike(Buffer, 'le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool redelegation\n */\nexport async function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toArrayLike(Buffer, 'le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the metadata program address for the stake pool\n */\nexport function findMetadataAddress(stakePoolMintAddress: PublicKey) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), stakePoolMintAddress.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { Lockup, PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nconst feeFields = [u64('denominator'), u64('numerator')];\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  struct([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], 'lockup'),\n  struct(feeFields, 'epochFee'),\n  option(struct(feeFields), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  struct(feeFields, 'stakeDepositFee'),\n  struct(feeFields, 'stakeWithdrawalFee'),\n  option(struct(feeFields), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  struct(feeFields, 'solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  struct(feeFields, 'solWithdrawalFee'),\n  option(struct(feeFields), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { WithdrawAccount } from '../index';\nimport {\n  Fee,\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(validatorListAcc?.data) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { InstructionType, encodeData, decodeData } from './utils';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'IncreaseValidatorStake'\n  | 'DecreaseValidatorStake'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'DepositSol'\n  | 'WithdrawStake'\n  | 'WithdrawSol'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'DecreaseValidatorStakeWithReserve'\n  | 'Redelegate'\n  | 'AddValidatorToPool';\n\n// 'UpdateTokenMetadata' and 'CreateTokenMetadata' have dynamic layouts\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.ns64('lamports'),\n  BufferLayout.ns64('transientStakeSeed'),\n]);\n\nconst UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.u32('startIndex'),\n  BufferLayout.u8('noMerge'),\n]);\n\nexport function tokenMetadataLayout(\n  instruction: number,\n  nameLength: number,\n  symbolLength: number,\n  uriLength: number,\n) {\n  if (nameLength > METADATA_MAX_NAME_LENGTH) {\n    throw 'maximum token name length is 32 characters';\n  }\n\n  if (symbolLength > METADATA_MAX_SYMBOL_LENGTH) {\n    throw 'maximum token symbol length is 10 characters';\n  }\n\n  if (uriLength > METADATA_MAX_URI_LENGTH) {\n    throw 'maximum token uri length is 200 characters';\n  }\n\n  return {\n    index: instruction,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('nameLen'),\n      BufferLayout.blob(nameLength, 'name'),\n      BufferLayout.u32('symbolLen'),\n      BufferLayout.blob(symbolLength, 'symbol'),\n      BufferLayout.u32('uriLen'),\n      BufferLayout.blob(uriLength, 'uri'),\n    ]),\n  };\n}\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  AddValidatorToPool: {\n    index: 1,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction'), BufferLayout.u32('seed')]),\n  },\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT,\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseValidatorStakeWithReserve: {\n    index: 21,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  Redelegate: {\n    index: 22,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.ns64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.ns64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.ns64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.ns64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseValidatorStakeWithReserveParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n}\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type AddValidatorToPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  reserveStake: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  seed?: number;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates instruction to add a validator into the stake pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      reserveStake,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      validatorVote,\n      seed,\n    } = params;\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool;\n    const data = encodeData(type, { seed: seed == undefined ? 0 : seed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to cleanup removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStakeWithReserve` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseValidatorStakeWithReserve(\n    params: DecreaseValidatorStakeWithReserveParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStakeWithReserve;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      reserveStake,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(17, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(18, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Decode a deposit stake pool instruction and retrieve the instruction params.\n   */\n  static decodeDepositStake(instruction: TransactionInstruction): DepositStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 11);\n\n    decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      validatorList: instruction.keys[1].pubkey,\n      depositAuthority: instruction.keys[2].pubkey,\n      withdrawAuthority: instruction.keys[3].pubkey,\n      depositStake: instruction.keys[4].pubkey,\n      validatorStake: instruction.keys[5].pubkey,\n      reserveStake: instruction.keys[6].pubkey,\n      destinationPoolAccount: instruction.keys[7].pubkey,\n      managerFeeAccount: instruction.keys[8].pubkey,\n      referralPoolAccount: instruction.keys[9].pubkey,\n      poolMint: instruction.keys[10].pubkey,\n    };\n  }\n\n  /**\n   * Decode a deposit sol instruction and retrieve the instruction params.\n   */\n  static decodeDepositSol(instruction: TransactionInstruction): DepositSolParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 9);\n\n    const { amount } = decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      depositAuthority: instruction.keys[1].pubkey,\n      withdrawAuthority: instruction.keys[2].pubkey,\n      reserveStake: instruction.keys[3].pubkey,\n      fundingAccount: instruction.keys[4].pubkey,\n      destinationPoolAccount: instruction.keys[5].pubkey,\n      managerFeeAccount: instruction.keys[6].pubkey,\n      referralPoolAccount: instruction.keys[7].pubkey,\n      poolMint: instruction.keys[8].pubkey,\n      lamports: amount,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  private static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('Invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `Invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n","import BN from 'bn.js';\nimport fs from 'fs';\nimport { create } from 'superstruct';\n\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountIdempotentInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n} from '@solana/spl-token';\nimport {\n  AccountInfo,\n  ComputeBudgetProgram,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nimport {\n  MAX_VALIDATORS_TO_UPDATE,\n  MINIMUM_ACTIVE_STAKE,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n} from './layouts';\nimport {\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findEphemeralStakeProgramAddress,\n  findMetadataAddress,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  lamportsToSol,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  solToLamports,\n  ValidatorAccount,\n} from './utils';\n\nexport type {\n  AccountType,\n  StakePool,\n  ValidatorList,\n  ValidatorStakeInfo,\n} from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  // @ts-ignore\n  const account = await connection.getAccountInfo(new PublicKey('9jpeBtbarFDfihjb9Nu1cxzRTGcsTUE4P8kf8NFzgYbG'));\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  const parsed = create(result.data.parsed, StakeAccount);\n\n  return parsed;\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let decodedData;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        authorizedPubkey,\n        associatedAddress,\n        authorizedPubkey,\n        poolMint,\n      ),\n    );\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        from,\n        associatedAddress,\n        from,\n        stakePool.poolMint,\n      ),\n    );\n    destinationTokenAccount = associatedAddress;\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(stakePool.account.data.poolMint, tokenOwner);\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake receiver ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(validatorListAccount?.data) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n  const { reserveStake, staker, validatorList } = stakePool;\n\n  const validatorListAccount = await getValidatorListAccount(connection, validatorList);\n\n  const validatorInfo = validatorListAccount.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error('Vote account is already in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n    seed,\n  );\n\n  const instructions: TransactionInstruction[] = [\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: staker,\n      reserveStake: reserveStake,\n      withdrawAuthority: withdrawAuthority,\n      validatorList: validatorList,\n      validatorStake: validatorStake,\n      validatorVote: validatorVote,\n    }),\n  ];\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the increaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.increaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the decreaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStakeWithReserve({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = await findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  payer: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePoolAddress,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePoolAddress,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["require$$0","this","isIterable","isObject","print","shiftIterator","toFailure","toFailures","run","assert","create","is","mask","validate","StructError","define","Struct","instance","nullable","number","optional","string","type","coerce","i","ieee754","require$$1","isBytes","crypto","u32","utf8ToBytes","abytes","concatBytes","u64","_0n","_1n","_2n","_3n","_5n","_8n","validateOpts","ut.validateObject","ut.bytesToNumberLE","ut.numberToBytesLE","ut.bytesToHex","ut.concatBytes","Fp","buffer","TextDecoder","TextEncoder","require$$2","Layout_1","Layout","nameWithProperty","bindConstructorLayout","ExternalLayout","GreedyCount","UInt","UIntBE","OffsetLayout","Int","IntBE","V2E32","divmodInt64","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","Structure","UnionDiscriminator","UnionLayoutDiscriminator","VariantLayout","Union","fixBitwiseResult","BitField","Boolean","BitStructure","Blob","CString","UTF8","Constant","browser","stringify","uuid","generateRequest","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","ut.abytes","ut.isBytes","ut.bytesToNumberBE","mod.mod","mod.invert","ut.numberToBytesBE","ut.hexToBytes","mod.getMinHashLength","mod.mapHashToField","ut.bitMask","ut.createHmacDrbg","hash","assertHash","assertExists","assertBytes","Buffer","serialize","deserialize","deserializeUnchecked","bs58","publicKey","BufferLayout.blob","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","BufferLayout.ns64","BufferLayout.u8","BufferLayout.seq","encodeData","BufferLayout.nu64","encodeDecode","bigInt","toBigIntLE","toBufferLE","offset","decodeData","PublicKeyFromString","BufferLayout.u16","AccountType","struct","u8","option","vec"],"mappings":"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AG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MAClD,EAAE,IAAI,SAAS,CAAC;CACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;MACnD,GAAG,IAAI,SAAS,CAAC;CACrB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,E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,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,KAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;CAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GA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C,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CACzC,SAAS;CACT;CACA;CACA;CACA;CACA,QAAQ,GAAG,CAAC,KAAK,EAAE;CACnB,YAAY,cAAc,CAAC,KAAK,CAAC,CAAC;CAClC,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;CACpD,YAAY,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;CACrD,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;CACzD,YAAY,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;CAC9B,YAAY,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC5C,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;CAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EA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I,EAAEI,MAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;CAClC,OAAO,CAAC,CAAC;CACT,MAAM,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB;CACvD,KAAK,CAAC,CAAC;CACP,GAAG,MAAM;CACT,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;CACjC,GAAG;CACH,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA,MAAM,0BAA0B,GAAG,IAAI,CAAC;CACxC,EAAE,UAAU,EAAE,MAAM,EAAE;CACtB,EAAE,cAAc,EAAE,MAAM,EAAE;CAC1B,EAAE,OAAO,EAAE,MAAM,EAAE;CACnB,EAAE,KAAK,EAAE,MAAM,EAAE;CACjB,EAAE,QAAQ,EAAE,MAAM,EAAE;CACpB,CAAC,CAAC,CAAC;AACH;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA,MAAM,wBAAwB,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;CACnE,EAAE,KAAK,EAAE,MAAM,EAAE;CACjB,EAAE,aAAa,EAAE,MAAM,EAAE;CACzB,EAAE,MAAM,EAAE,MAAM,EAAE;CAClB,EAAE,WAAW,EAAE,M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AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA,MAAM,6BAA6B,GAAG,uBAAuB,CAAC,IAAI,CAAC;CACnE,EAAE,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;CAC/C,EAAE,KAAK,EAAE,IAAI,CAAC;CACd,IAAI,SAAS,EAAE,MAAM,EAAE;CACvB,IAAI,QAAQ,EAAE,MAAM,EAAE;CACtB,GAAG,CAAC;CACJ,CAAC,CAAC,CAAC,CAAC;AACJ;CACA;CACA;CACA;AACA;CACA,SAAS,eAAe,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,eAAe,EAAE,uBAAuB,EAAE,SAAS,EAAE;CAC7G,EAAE,MAAM,KAAK,GAAG,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;CACtD,EAAE,IAAI,KAAK,CAAC;CACZ,EAAE;CACF,IAAI,IAAI,SAAS,IAAI,IAAI,EAAE;CAC3B,MAAM,OAAO,CAAC,IAAI,CAAC,yFAAyF,GAAG,qEAAqE,CAAC,CAAC;CACtL,KAAK;CACL,GAAG;CACH,EAAE,IAAI,mBAAmB,CAAC;CAC1B,EAAE,IAAI,eAAe,EAAE;CACvB,IAAI,mBAAmB,GAAG,OAAO,IAAI,EAAE,IAAI,KAAK;CAChD,MAAM,MAAM,iBAAi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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83]}