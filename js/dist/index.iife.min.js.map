{"version":3,"file":"index.iife.min.js","sources":["../node_modules/bn.js/lib/bn.js","../node_modules/superstruct/dist/index.mjs","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/@solana/web3.js/node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/utils.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/constants.ts","../src/utils/math.ts","../src/utils/program-address.ts","../node_modules/buffer-layout/lib/Layout.js","../node_modules/@coral-xyz/borsh/dist/index.js","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar errors = new Map([[-32000, \"Event not provided\"], [-32600, \"Invalid Request\"], [-32601, \"Method not found\"], [-32602, \"Invalid params\"], [-32603, \"Internal error\"], [-32604, \"Params not found\"], [-32605, \"Method forbidden\"], [-32606, \"Event forbidden\"], [-32700, \"Parse error\"]]);\nvar DefaultDataPack = /*#__PURE__*/function () {\n  function DefaultDataPack() {\n    (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n  }\n  (0, _createClass2[\"default\"])(DefaultDataPack, [{\n    key: \"encode\",\n    value: function encode(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(value) {\n      return JSON.parse(value);\n    }\n  }]);\n  return DefaultDataPack;\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nexports.DefaultDataPack = DefaultDataPack;\nfunction createError(code, details) {\n  var error = {\n    code: code,\n    message: errors.get(code) || \"Internal Server Error\"\n  };\n  if (details) error[\"data\"] = details;\n  return error;\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nvar _utils = require(\"./utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();else _this.dataPack = dataPack;\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || undefined,\n          id: rpc_id\n        };\n        _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params\n        };\n        _this3.socket.send(_this3.dataPack.encode(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = _this4.dataPack.decode(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message === null || message === void 0 ? void 0 : message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _class;\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_class = PublicKey;\nPublicKey.default = new _class('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = byteArray.splice(0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.splice(0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.splice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = byteArray.shift();\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: byteArray.shift(),\n      numReadonlySignedAccounts: byteArray.shift(),\n      numReadonlyUnsignedAccounts: byteArray.shift()\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args], true /* isArrayProp */);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _class2;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_class2 = Lockup;\nLockup.default = new _class2(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const isSigner = byteArray.splice(0, 1)[0] === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","import { Buffer } from 'buffer';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  METADATA_PROGRAM_ID,\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport async function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed?: number,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed ? new BN(seed).toArrayLike(Buffer, 'le', 4) : Buffer.alloc(0),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toArrayLike(Buffer, 'le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool redelegation\n */\nexport async function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toArrayLike(Buffer, 'le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the metadata program address for the stake pool\n */\nexport function findMetadataAddress(stakePoolMintAddress: PublicKey) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), stakePoolMintAddress.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { Lockup, PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nconst feeFields = [u64('denominator'), u64('numerator')];\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  struct([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], 'lockup'),\n  struct(feeFields, 'epochFee'),\n  option(struct(feeFields), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  struct(feeFields, 'stakeDepositFee'),\n  struct(feeFields, 'stakeWithdrawalFee'),\n  option(struct(feeFields), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  struct(feeFields, 'solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  struct(feeFields, 'solWithdrawalFee'),\n  option(struct(feeFields), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { WithdrawAccount } from '../index';\nimport {\n  Fee,\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(validatorListAcc?.data) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { InstructionType, encodeData, decodeData } from './utils';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'IncreaseValidatorStake'\n  | 'DecreaseValidatorStake'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'DepositSol'\n  | 'WithdrawStake'\n  | 'WithdrawSol'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'DecreaseValidatorStakeWithReserve'\n  | 'Redelegate'\n  | 'AddValidatorToPool';\n\n// 'UpdateTokenMetadata' and 'CreateTokenMetadata' have dynamic layouts\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.ns64('lamports'),\n  BufferLayout.ns64('transientStakeSeed'),\n]);\n\nconst UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.u32('startIndex'),\n  BufferLayout.u8('noMerge'),\n]);\n\nexport function tokenMetadataLayout(\n  instruction: number,\n  nameLength: number,\n  symbolLength: number,\n  uriLength: number,\n) {\n  if (nameLength > METADATA_MAX_NAME_LENGTH) {\n    throw 'maximum token name length is 32 characters';\n  }\n\n  if (symbolLength > METADATA_MAX_SYMBOL_LENGTH) {\n    throw 'maximum token symbol length is 10 characters';\n  }\n\n  if (uriLength > METADATA_MAX_URI_LENGTH) {\n    throw 'maximum token uri length is 200 characters';\n  }\n\n  return {\n    index: instruction,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('nameLen'),\n      BufferLayout.blob(nameLength, 'name'),\n      BufferLayout.u32('symbolLen'),\n      BufferLayout.blob(symbolLength, 'symbol'),\n      BufferLayout.u32('uriLen'),\n      BufferLayout.blob(uriLength, 'uri'),\n    ]),\n  };\n}\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  AddValidatorToPool: {\n    index: 1,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction'), BufferLayout.u32('seed')]),\n  },\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT,\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseValidatorStakeWithReserve: {\n    index: 21,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  Redelegate: {\n    index: 22,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.ns64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.ns64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.ns64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.ns64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseValidatorStakeWithReserveParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n}\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type AddValidatorToPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  reserveStake: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  seed?: number;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates instruction to add a validator into the stake pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      reserveStake,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      validatorVote,\n      seed,\n    } = params;\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool;\n    const data = encodeData(type, { seed: seed == undefined ? 0 : seed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to cleanup removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStakeWithReserve` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseValidatorStakeWithReserve(\n    params: DecreaseValidatorStakeWithReserveParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStakeWithReserve;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      reserveStake,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(17, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(18, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Decode a deposit stake pool instruction and retrieve the instruction params.\n   */\n  static decodeDepositStake(instruction: TransactionInstruction): DepositStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 11);\n\n    decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      validatorList: instruction.keys[1].pubkey,\n      depositAuthority: instruction.keys[2].pubkey,\n      withdrawAuthority: instruction.keys[3].pubkey,\n      depositStake: instruction.keys[4].pubkey,\n      validatorStake: instruction.keys[5].pubkey,\n      reserveStake: instruction.keys[6].pubkey,\n      destinationPoolAccount: instruction.keys[7].pubkey,\n      managerFeeAccount: instruction.keys[8].pubkey,\n      referralPoolAccount: instruction.keys[9].pubkey,\n      poolMint: instruction.keys[10].pubkey,\n    };\n  }\n\n  /**\n   * Decode a deposit sol instruction and retrieve the instruction params.\n   */\n  static decodeDepositSol(instruction: TransactionInstruction): DepositSolParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 9);\n\n    const { amount } = decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      depositAuthority: instruction.keys[1].pubkey,\n      withdrawAuthority: instruction.keys[2].pubkey,\n      reserveStake: instruction.keys[3].pubkey,\n      fundingAccount: instruction.keys[4].pubkey,\n      destinationPoolAccount: instruction.keys[5].pubkey,\n      managerFeeAccount: instruction.keys[6].pubkey,\n      referralPoolAccount: instruction.keys[7].pubkey,\n      poolMint: instruction.keys[8].pubkey,\n      lamports: amount,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  private static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('Invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `Invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n","import BN from 'bn.js';\nimport fs from 'fs';\nimport { create } from 'superstruct';\n\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountIdempotentInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n} from '@solana/spl-token';\nimport {\n  AccountInfo,\n  ComputeBudgetProgram,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nimport {\n  MAX_VALIDATORS_TO_UPDATE,\n  MINIMUM_ACTIVE_STAKE,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n} from './layouts';\nimport {\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findEphemeralStakeProgramAddress,\n  findMetadataAddress,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  lamportsToSol,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  solToLamports,\n  ValidatorAccount,\n} from './utils';\n\nexport type {\n  AccountType,\n  StakePool,\n  ValidatorList,\n  ValidatorStakeInfo,\n} from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  // @ts-ignore\n  const account = await connection.getAccountInfo(new PublicKey('9jpeBtbarFDfihjb9Nu1cxzRTGcsTUE4P8kf8NFzgYbG'));\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  const parsed = create(result.data.parsed, StakeAccount);\n\n  return parsed;\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let decodedData;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        authorizedPubkey,\n        associatedAddress,\n        authorizedPubkey,\n        poolMint,\n      ),\n    );\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        from,\n        associatedAddress,\n        from,\n        stakePool.poolMint,\n      ),\n    );\n    destinationTokenAccount = associatedAddress;\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(stakePool.account.data.poolMint, tokenOwner);\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake receiver ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(validatorListAccount?.data) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n  const { reserveStake, staker, validatorList } = stakePool;\n\n  const validatorListAccount = await getValidatorListAccount(connection, validatorList);\n\n  const validatorInfo = validatorListAccount.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error('Vote account is already in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n    seed,\n  );\n\n  const instructions: TransactionInstruction[] = [\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: staker,\n      reserveStake: reserveStake,\n      withdrawAuthority: withdrawAuthority,\n      validatorList: validatorList,\n      validatorStake: validatorStake,\n      validatorVote: validatorVote,\n    }),\n  ];\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the increaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.increaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the decreaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStakeWithReserve({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = await findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  payer: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePoolAddress,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePoolAddress,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","wordSize","Buffer","window","require$$0","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","_strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","b","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","s","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","p","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","n","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","StructError","TypeError","failure","failures","cached","message","explanation","rest","path","join","super","cause","Object","assign","isIterable","isObject","iterator","print","value","JSON","stringify","shiftIterator","done","toFailure","result","context","struct","branch","type","refinement","key","toFailures","run","options","coerce","coercer","schema","status","validator","v","entries","ts","Map","set","Set","refiner","Struct$2","Struct","props","create","is","validate","tuples","tuple","error","define","enums","values","description","map","includes","instance","Class","nullable","isNaN","optional","keys","condition","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","getLens","b64","validLen","indexOf","placeHoldersLen","lens","_byteLength","arr","curByte","tripletToBase64","encodeChunk","uint8","push","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","Infinity","write","rt","floor","log","LN2","base64","require$$1","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","proto","foo","setPrototypeOf","defineProperty","enumerable","get","isBuffer","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","alloc","fill","encoding","checked","allocUnsafeSlow","isEncoding","actual","slice","fromArrayLike","array","arrayView","obj","numberIsNaN","data","_isBuffer","compare","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","apply","toLocaleString","equals","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","_arr","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","writable","configurable","stack","range","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isSafeInteger","isBytes","lengths","hash","outputLen","blockLen","exists","checkFinished","destroyed","finished","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","byteSwap","byteSwap32","TextEncoder","encode","toBytes","abytes","concatBytes","arrays","sum","pad","Hash","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","l","setUint32","Chi","Maj","HashMD","padOffset","take","dataView","process","roundClean","digestInto","oview","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","item","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","equalBytes","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","Q1div2","tonelliSlow","ONE","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","reduce","FpPow","f","FpInvertBatch","nums","lastMultiplied","is0","inverted","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","Field","redef","sqrtP","freeze","lhs","rhs","sqrN","addN","subN","mulN","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","wNAF","constTimeNegate","negate","W","windows","unsafeLadder","double","precomputeWindow","points","precomputes","BASE","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","msgs","ut.concatBytes","sign","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Fp$1","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","idx","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","Layout$3","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","Layout$2","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator$1","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","BitField$1","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","_cached","valid","Struct$1","any","Element","literal","never","record","Key","Value","Elements","Never","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","version","hashfunc","generateUUID","namespace","err","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","_interopRequireDefault","_typeof","_regeneratorRuntime","asyncIterator","toStringTag","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","async","Promise","stop","rval","handle","complete","finish","catch","_catch","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","reject","_next","_throw","info","_asyncToGenerator","_classCallCheck","Constructor","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","has","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","DefaultDataPack","createError","_classCallCheck2","_createClass2","details","_regenerator","_asyncToGenerator2","_typeof2","require$$3","require$$4","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_utils","require$$10","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","address","generate_request_id","dataPack","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","setTimeout","_login","_callee","resp","_callee$","_context","login","_x","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","ut.abytes","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.isBytes","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","sqrtError","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","signature","sg","_sig","derError","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","properties","SOLANA_SCHEMA","decodeUnchecked","Enum","enum","_class","_Symbol$toStringTag","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","unique","toBase58","zeroPad","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","config","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","getDefaultExportFromCjs","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","fastStableStringify$1","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","decodeData","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","BufferLayout.u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_class2","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","authorize","authorizeWithSeed","splitInstruction","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assert$1","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","bool","boolLayout","publicKeyLayout","TokenError","TokenAccountNotFoundError","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenOwnerOffCurveError","TokenInstruction","addSigners","ownerOrAuthority","multiSigners","approveInstructionData","createApproveInstruction","Approve","AccountType","ACCOUNT_TYPE_SIZE","MultisigLayout","MULTISIG_SIZE","AccountState","AccountLayout","ACCOUNT_SIZE","getAccount","unpackAccount","rawAccount","tlvData","delegateOption","delegatedAmount","isInitialized","Uninitialized","isFrozen","Frozen","isNative","isNativeOption","closeAuthority","closeAuthorityOption","MintLayout","getAssociatedTokenAddressSync","allowOwnerOffCurve","associatedTokenProgramId","createAssociatedTokenAccountIdempotentInstruction","associatedToken","buildAssociatedTokenAccountInstruction","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","splitIndex","solString","parseFloat","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","findMetadataAddress","stakePoolMintAddress","Layout$1","upv","const","rustEnum","vecU8","tagged","vec","i256","u256","i128","u128","i32","i8","buffer_layout_1","web3_js_1","buffer_layout_2","BNLayout","signed","i64","WrappedLayout","decoder","encoder","OptionLayout","decodeBool","encodeBool","wrappedLayout","decodeTag","receivedTag","variants","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","valueBytes","feeFields","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","_b","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","divideBnToNumber","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","quotient","newStakeAccount","stakeReceiverKeypair","arrayChunk","MOVE_STAKE_LAYOUT","UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT","tokenMetadataLayout","nameLength","symbolLength","uriLength","STAKE_POOL_INSTRUCTION_LAYOUTS","AddValidatorToPool","DecreaseValidatorStake","IncreaseValidatorStake","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","DepositSol","WithdrawSol","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","DecreaseValidatorStakeWithReserve","Redelegate","StakePoolInstruction","addValidatorToPool","withdrawAuthority","validatorStake","validatorVote","updateValidatorListBalance","startIndex","noMerge","validatorAndTransientStakePairs","updateStakePoolBalance","managerFeeAccount","poolMint","cleanupRemovedValidatorEntries","increaseValidatorStake","transientStake","transientStakeSeed","increaseAdditionalValidatorStake","ephemeralStake","ephemeralStakeSeed","decreaseValidatorStake","decreaseValidatorStakeWithReserve","decreaseAdditionalValidatorStake","depositStake","depositAuthority","destinationPoolAccount","referralPoolAccount","depositSol","fundingAccount","withdrawStake","destinationStake","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","withdrawSol","destinationSystemAccount","solWithdrawAuthority","redelegate","stakePoolWithdrawAuthority","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","createTokenMetadata","tokenMetadata","manager","symbol","uri","nameLen","symbolLen","uriLen","updateTokenMetadata","decodeDepositStake","decodeDepositSol","getStakePoolAccount","getStakeAccount","stakeAccount","getStakePoolAccounts","stakePoolProgramAddress","decodedData","poolTokenReceiverAccount","associatedAddress","stakeDepositAuthority","destinationTokenAccount","referrerTokenAccount","fromBalance","stakePoolAccount","userSolTransfer","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","tokenAccount","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","_d","validatorListAccount","isValidVoter","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","stakeToReceive","stakeKeypair","newStakeKeypair","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","validatorInfo","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","maxValidators","currentNumberOfValidators","epochInfo","minimumReserveStakeBalance","stakeAccounts","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","sourceVoteAccount","destinationVoteAccount","createPoolTokenMetadata","updatePoolTokenMetadata"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83]}