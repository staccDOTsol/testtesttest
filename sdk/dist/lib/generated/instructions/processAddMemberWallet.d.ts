/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as web3 from "@solana/web3.js";
import { AddMemberArgs } from "../types/AddMemberArgs";
/**
 * @category Instructions
 * @category ProcessAddMemberWallet
 * @category generated
 */
export type ProcessAddMemberWalletInstructionArgs = {
    args: AddMemberArgs;
};
/**
 * Accounts required by the _processAddMemberWallet_ instruction
 * @category Instructions
 * @category ProcessAddMemberWallet
 * @category generated
 */
export type ProcessAddMemberWalletInstructionAccounts = {
    authority: web3.PublicKey;
    member: web3.PublicKey;
    fanout: web3.PublicKey;
    membershipAccount: web3.PublicKey;
};
/**
 * Creates a _ProcessAddMemberWallet_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ProcessAddMemberWallet
 * @category generated
 */
export declare function createProcessAddMemberWalletInstruction(accounts: ProcessAddMemberWalletInstructionAccounts, args: ProcessAddMemberWalletInstructionArgs): web3.TransactionInstruction;
//# sourceMappingURL=processAddMemberWallet.d.ts.map