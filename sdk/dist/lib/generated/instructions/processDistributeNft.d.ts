/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as web3 from "@solana/web3.js";
/**
 * @category Instructions
 * @category ProcessDistributeNft
 * @category generated
 */
export type ProcessDistributeNftInstructionArgs = {
    distributeForMint: boolean;
};
/**
 * Accounts required by the _processDistributeNft_ instruction
 * @category Instructions
 * @category ProcessDistributeNft
 * @category generated
 */
export type ProcessDistributeNftInstructionAccounts = {
    payer: web3.PublicKey;
    member: web3.PublicKey;
    membershipMintTokenAccount: web3.PublicKey;
    membershipKey: web3.PublicKey;
    membershipVoucher: web3.PublicKey;
    fanout: web3.PublicKey;
    holdingAccount: web3.PublicKey;
    fanoutForMint: web3.PublicKey;
    fanoutForMintMembershipVoucher: web3.PublicKey;
    fanoutMint: web3.PublicKey;
    fanoutMintMemberTokenAccount: web3.PublicKey;
};
/**
 * Creates a _ProcessDistributeNft_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ProcessDistributeNft
 * @category generated
 */
export declare function createProcessDistributeNftInstruction(accounts: ProcessDistributeNftInstructionAccounts, args: ProcessDistributeNftInstructionArgs): web3.TransactionInstruction;
//# sourceMappingURL=processDistributeNft.d.ts.map